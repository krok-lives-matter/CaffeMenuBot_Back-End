// <auto-generated />
using System;
using CaffeMenuBot.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CaffeMenuBot.Data.Migrations
{
    [DbContext(typeof(CaffeMenuBotContext))]
    [Migration("20210502203204_ScheduleAndReview")]
    partial class ScheduleAndReview
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("CaffeMenuBot.Data.Models.Bot.BotUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("user_id")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("user_phone");

                    b.HasKey("Id");

                    b.ToTable("bot_users", "public");
                });

            modelBuilder.Entity("CaffeMenuBot.Data.Models.Menu.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("category_id")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("category_name");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("categories", "public");
                });

            modelBuilder.Entity("CaffeMenuBot.Data.Models.Menu.Dish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("dish_id")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("DishName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("dish_name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("price");

                    b.Property<string>("Serving")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("serving");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("dishes", "public");
                });

            modelBuilder.Entity("CaffeMenuBot.Data.Models.Reviews.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("review_id")
                        .UseIdentityByDefaultColumn();

                    b.Property<byte>("Rating")
                        .HasColumnType("smallint")
                        .HasColumnName("rating");

                    b.Property<string>("ReviewComment")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("review_comment");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("reviews", "public");
                });

            modelBuilder.Entity("CaffeMenuBot.Data.Models.Schedule.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("schedule_id")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("CloseTime")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("close_time");

                    b.Property<string>("OpenTime")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("open_time");

                    b.Property<string>("ScheduleName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("weekday_name");

                    b.HasKey("Id");

                    b.ToTable("schedule", "public");
                });

            modelBuilder.Entity("CaffeMenuBot.Data.Models.Menu.Category", b =>
                {
                    b.HasOne("CaffeMenuBot.Data.Models.Menu.Category", "ParentCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("CaffeMenuBot.Data.Models.Menu.Dish", b =>
                {
                    b.HasOne("CaffeMenuBot.Data.Models.Menu.Category", "Category")
                        .WithMany("Dishes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CaffeMenuBot.Data.Models.Reviews.Review", b =>
                {
                    b.HasOne("CaffeMenuBot.Data.Models.Bot.BotUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CaffeMenuBot.Data.Models.Menu.Category", b =>
                {
                    b.Navigation("Dishes");

                    b.Navigation("SubCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
